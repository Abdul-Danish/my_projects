Generate Broker Keystore & Truststore

	# Create broker keystore: ('-dname' parameter is used to specify the Distinguished Name (DN))

	keytool -genkeypair -alias kafka-broker -keyalg RSA -keystore kafka.broker.keystore.jks -storepass p@ssword -dname "CN=localhost, OU=Dev, O=DigitalDots, L=Hyderabad, S=Telengana, C=IN"


	# Export broker cert:

	keytool -export -alias kafka-broker -file kafka-broker.crt -keystore kafka.broker.keystore.jks -storepass p@ssword


	# Create truststore and import the cert:

	keytool -import -alias kafka-broker -file kafka-broker.crt -keystore kafka.broker.truststore.jks -storepass brokerp@ssword -noprompt

kafka server.properties:
	
	listeners=SSL://localhost:9093
	advertised.listeners=SSL://localhost:9093
	listener.security.protocol.map=SSL:SSL
	ssl.keystore.location=/path/to/kafka.broker.keystore.jks
	ssl.keystore.password=brokerpass
	ssl.key.password=brokerpass
	ssl.truststore.location=/path/to/kafka.broker.truststore.jks
	ssl.truststore.password=brokertrust
	ssl.client.auth=required


Spring Client Keystore & Truststore:

	# Create client keystore:

	keytool -genkeypair -alias client-cert -keyalg RSA -keystore client.keystore.jks -storepass p@ssword -dname "CN=localhost, OU=Dev, O=DigitalDots, L=Hyderabad, S=Telangana, C=IN"


	# Export client cert:

	keytool -export -alias client-cert -file client-cert.crt -keystore client.keystore.jks -storepass p@ssword


	# Create client truststore and import broker cert:

	keytool -import -alias kafka-broker -file kafka-broker.crt -keystore client.truststore.jks -storepass p@ssword -noprompt

	# Import client cert into broker truststore:

	keytool -import -alias client-cert -file client-cert.crt -keystore /home/danish/Documents/kafka/broker_certs/kafka.broker.keystore.jks -storepass p@ssword -noprompt


List Keystore:

	- keytool -list -v -keystore kafka.broker.keystore.jks



| Scenario              | Action                                                                                                           |
| --------------------- | ---------------------------------------------------------------------------------------------------------------- |
| One-way SSL (default) | Client imports broker cert into **client truststore**                                                            |
| Two-way SSL (mTLS)    | Client imports broker cert into **client truststore**, and broker imports client cert into **broker truststore** |
| Why not both always?  | Because trust only needs to be set up in the direction you're requiring authentication                           |



@@ Refs:

Spring SSL: (Spring : 3.4.5)

	- https://docs.spring.io/spring-boot/reference/features/ssl.html

Configuring kafka SSL using spring: (Spring < 3.1)

	- https://www.baeldung.com/spring-boot-kafka-ssl



@@ rm -rf /tmp/kraft-broker-logs-1


$ KAFKA_CLUSTER_ID="$(bin/kafka-storage.sh random-uuid)"

Format Log Directories

$ bin/kafka-storage.sh format --standalone -t $KAFKA_CLUSTER_ID -c config/broker.properties

Start the Kafka Server

$ bin/kafka-server-start.sh config/broker.properties


rm -rf /tmp/kraft-broker-logs-1
KAFKA_CLUSTER_ID="$(bin/kafka-storage.sh random-uuid)"
bin/kafka-storage.sh format --standalone -t $KAFKA_CLUSTER_ID -c config/broker.properties
bin/kafka-server-start.sh config/broker.properties


application.properties:

spring.kafka.security.protocol=SSL
spring.ssl.bundle.jks.kafka-bundle.protocol=SSL
spring.ssl.bundle.jks.kafka-bundle.keystore.location=classpath:client.keystore.jks
spring.ssl.bundle.jks.kafka-bundle.keystore.password=p@ssword

spring.ssl.bundle.jks.kafka-bundle.truststore.location=classpath:client.truststore.jks
spring.ssl.bundle.jks.kafka-bundle.truststore.password=p@ssword

spring.kafka.ssl.bundle=kafka-bundle


@@ sh properties:

export SPRING_KAFKA_SECURITY_PROTOCOL=SSL
export SPRING_SSL_BUNDLE_JKS_KAFKA-BUNDLE_PROTOCOL=SSL
export SPRING_SSL_BUNDLE_JKS_KAFKA-BUNDLE_KEYSTORE_LOCATION=/home/danish/Documents/client_certificates/keystore.jks

export SPRING_SSL_BUNDLE_JKS_KAFKA-BUNDLE_KETSTORE_PASSWORD=p@ssword
export SPRING_SSL_BUNDLE_JKS_KAFKA-BUNDLE_TRUSTSTORE_LOCATION=/home/danish/Documents/client_certificates/truststore.jks

export SPRING_SSL_BUNDLE_JKS_KAFKA-BUNDLE_TRUSTSTORE PASSWORD=p@ssword
