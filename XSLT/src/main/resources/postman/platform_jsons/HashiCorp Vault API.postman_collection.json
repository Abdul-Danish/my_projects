{
	"info": {
		"_postman_id": "1060e208-1fb5-4ac4-a2cd-edd159ad7b9c",
		"name": "HashiCorp Vault API",
		"description": "HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2149654"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "token",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "The token create path is used to create new tokens.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"create"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/token/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"create"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "This token create path is used to create new tokens adhering to the given role.",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/create/:role_name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"create",
												":role_name"
											],
											"variable": [
												{
													"key": "role_name",
													"value": "<string>",
													"description": "(Required) Name of the role"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/token/create/:role_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"create",
														":role_name"
													],
													"variable": [
														{
															"key": "role_name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "lookup",
							"item": [
								{
									"name": "This endpoint will lookup a token and its properties.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/lookup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"lookup"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/token/lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"lookup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "This endpoint will lookup a token and its properties.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/lookup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"lookup"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/token/lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"lookup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "lookup-self",
							"item": [
								{
									"name": "This endpoint will lookup a token and its properties.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/lookup-self",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"lookup-self"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/token/lookup-self",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"lookup-self"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "This endpoint will lookup a token and its properties.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/lookup-self",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"lookup-self"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/token/lookup-self",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"lookup-self"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "roles",
							"item": [
								{
									"name": "{role name}",
									"item": [
										{
											"name": "get Auth Token Roles Role name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/token/roles/:role_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"roles",
														":role_name"
													],
													"variable": [
														{
															"key": "role_name",
															"value": "<string>",
															"description": "(Required) Name of the role"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/auth/token/roles/:role_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"token",
																"roles",
																":role_name"
															],
															"variable": [
																{
																	"key": "role_name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "post Auth Token Roles Role name",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allowed_entity_aliases\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disallowed_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"explicit_max_ttl\": \"<seconds>\",\n    \"orphan\": \"<boolean>\",\n    \"path_suffix\": \"<string>\",\n    \"period\": \"<seconds>\",\n    \"renewable\": true,\n    \"token_bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_explicit_max_ttl\": \"<seconds>\",\n    \"token_no_default_policy\": \"<boolean>\",\n    \"token_num_uses\": \"<integer>\",\n    \"token_period\": \"<seconds>\",\n    \"token_type\": \"default-service\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/token/roles/:role_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"roles",
														":role_name"
													],
													"variable": [
														{
															"key": "role_name",
															"value": "<string>",
															"description": "(Required) Name of the role"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"allowed_entity_aliases\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"disallowed_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"explicit_max_ttl\": \"<seconds>\",\n    \"orphan\": \"<boolean>\",\n    \"path_suffix\": \"<string>\",\n    \"period\": \"<seconds>\",\n    \"renewable\": true,\n    \"token_bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_explicit_max_ttl\": \"<seconds>\",\n    \"token_no_default_policy\": \"<boolean>\",\n    \"token_num_uses\": \"<integer>\",\n    \"token_period\": \"<seconds>\",\n    \"token_type\": \"default-service\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/auth/token/roles/:role_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"token",
																"roles",
																":role_name"
															],
															"variable": [
																{
																	"key": "role_name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "delete Auth Token Roles Role name",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/token/roles/:role_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"roles",
														":role_name"
													],
													"variable": [
														{
															"key": "role_name",
															"value": "<string>",
															"description": "(Required) Name of the role"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/auth/token/roles/:role_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"token",
																"roles",
																":role_name"
															],
															"variable": [
																{
																	"key": "role_name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "This endpoint lists configured roles.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/roles?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"roles"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/token/roles?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"token",
														"roles"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List token accessors, which can then be\nbe used to iterate and discover their properties\nor revoke them. Because this can be used to\ncause a denial of service, this endpoint\nrequires 'sudo' capability in addition to\n'list'.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/token/accessors/?list=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"accessors",
										""
									],
									"query": [
										{
											"key": "list",
											"value": "<string>",
											"description": "Return a list if `true`"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/accessors/?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"accessors",
												""
											],
											"query": [
												{
													"key": "list",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "The token create path is used to create new orphan tokens.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/token/create-orphan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"create-orphan"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/create-orphan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"create-orphan"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will lookup a token associated with the given accessor and its properties. Response will not contain the token ID.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessor\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token/lookup-accessor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"lookup-accessor"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accessor\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/lookup-accessor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"lookup-accessor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will renew the given token and prevent expiration.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"increment\": 0,\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token/renew",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"renew"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"increment\": 0,\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/renew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"renew"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will renew a token associated with the given accessor and its properties. Response will not contain the token ID.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessor\": \"<string>\",\n    \"increment\": 0\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token/renew-accessor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"renew-accessor"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accessor\": \"<string>\",\n    \"increment\": 0\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/renew-accessor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"renew-accessor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will renew the token used to call it and prevent expiration.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"increment\": 0,\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token/renew-self",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"renew-self"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"increment\": 0,\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/renew-self",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"renew-self"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will delete the given token and all of its child tokens.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"revoke"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"revoke"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will delete the token associated with the accessor and all of its child tokens.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessor\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token/revoke-accessor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"revoke-accessor"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accessor\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/revoke-accessor",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"revoke-accessor"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will delete the token and orphan its child tokens.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token/revoke-orphan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"revoke-orphan"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/token/revoke-orphan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"revoke-orphan"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint will delete the token used to call it and all of its child tokens.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/token/revoke-self",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"revoke-self"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/revoke-self",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"revoke-self"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint performs cleanup tasks that can be run if certain error\nconditions have occurred.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/token/tidy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token",
										"tidy"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/token/tidy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"token",
												"tidy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "userpass",
					"item": [
						{
							"name": "duo",
							"item": [
								{
									"name": "config",
									"item": [
										{
											"name": "Configure Duo second factor behavior.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/duo/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"duo",
														"config"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/auth/userpass/duo/config",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"userpass",
																"duo",
																"config"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Configure Duo second factor behavior.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"push_info\": \"<string>\",\n    \"user_agent\": \"<string>\",\n    \"username_format\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/duo/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"duo",
														"config"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"push_info\": \"<string>\",\n    \"user_agent\": \"<string>\",\n    \"username_format\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/auth/userpass/duo/config",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"userpass",
																"duo",
																"config"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Configure the access keys and host for Duo API connections.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"host\": \"<string>\",\n    \"ikey\": \"<string>\",\n    \"skey\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/userpass/duo/access",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"userpass",
												"duo",
												"access"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"host\": \"<string>\",\n    \"ikey\": \"<string>\",\n    \"skey\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/duo/access",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"duo",
														"access"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "mfa config",
							"item": [
								{
									"name": "Configure multi factor backend.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/userpass/mfa_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"userpass",
												"mfa_config"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/mfa_config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"mfa_config"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Configure multi factor backend.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/userpass/mfa_config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"userpass",
												"mfa_config"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/mfa_config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"mfa_config"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "users",
							"item": [
								{
									"name": "{username}",
									"item": [
										{
											"name": "Manage users allowed to authenticate.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) Username for this user."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/auth/userpass/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"userpass",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Manage users allowed to authenticate.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_ttl\": \"<seconds>\",\n    \"password\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_explicit_max_ttl\": \"<seconds>\",\n    \"token_max_ttl\": \"<seconds>\",\n    \"token_no_default_policy\": \"<boolean>\",\n    \"token_num_uses\": \"<integer>\",\n    \"token_period\": \"<seconds>\",\n    \"token_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_ttl\": \"<seconds>\",\n    \"token_type\": \"default-service\",\n    \"ttl\": \"<seconds>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) Username for this user."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_ttl\": \"<seconds>\",\n    \"password\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_bound_cidrs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_explicit_max_ttl\": \"<seconds>\",\n    \"token_max_ttl\": \"<seconds>\",\n    \"token_no_default_policy\": \"<boolean>\",\n    \"token_num_uses\": \"<integer>\",\n    \"token_period\": \"<seconds>\",\n    \"token_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_ttl\": \"<seconds>\",\n    \"token_type\": \"default-service\",\n    \"ttl\": \"<seconds>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/auth/userpass/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"userpass",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Manage users allowed to authenticate.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) Username for this user."
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/auth/userpass/users/:username",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"userpass",
																"users",
																":username"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Reset user's password.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/users/:username/password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"users",
														":username",
														"password"
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) Username for this user."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/auth/userpass/users/:username/password",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"userpass",
																"users",
																":username",
																"password"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update the policies associated with the username.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/users/:username/policies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"users",
														":username",
														"policies"
													],
													"variable": [
														{
															"key": "username",
															"value": "<string>",
															"description": "(Required) Username for this user."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/auth/userpass/users/:username/policies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"auth",
																"userpass",
																"users",
																":username",
																"policies"
															],
															"variable": [
																{
																	"key": "username"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Manage users allowed to authenticate.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/userpass/users?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"userpass",
												"users"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/userpass/users?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"userpass",
														"users"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Log in with a username and password.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"<string>\",\n    \"passcode\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/userpass/login/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"userpass",
										"login",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) Username of the user."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"method\": \"<string>\",\n    \"passcode\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/auth/userpass/login/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"userpass",
												"login",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "certificate",
			"item": [
				{
					"name": "ca",
					"item": [
						{
							"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/ca",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"ca"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/ca",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"ca"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/ca/pem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"ca",
										"pem"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/ca/pem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"ca",
												"pem"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "cert",
					"item": [
						{
							"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/cert/ca_chain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"cert",
										"ca_chain"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/cert/ca_chain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"cert",
												"ca_chain"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/cert/crl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"cert",
										"crl"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/cert/crl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"cert",
												"crl"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/cert/:serial",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"cert",
										":serial"
									],
									"variable": [
										{
											"key": "serial",
											"value": "<string>",
											"description": "(Required) Certificate serial number, in colon- or hyphen-separated octal"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/cert/:serial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"cert",
												":serial"
											],
											"variable": [
												{
													"key": "serial"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "config",
					"item": [
						{
							"name": "crl",
							"item": [
								{
									"name": "Configure the CRL expiration.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/config/crl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"config",
												"crl"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/certificate/config/crl",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"certificate",
														"config",
														"crl"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Configure the CRL expiration.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"disable\": \"<boolean>\",\n    \"expiry\": \"72h\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/config/crl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"config",
												"crl"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"disable\": \"<boolean>\",\n    \"expiry\": \"72h\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/certificate/config/crl",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"certificate",
														"config",
														"crl"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "urls",
							"item": [
								{
									"name": "Set the URLs for the issuing CA, CRL distribution points, and OCSP servers.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/config/urls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"config",
												"urls"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/certificate/config/urls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"certificate",
														"config",
														"urls"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set the URLs for the issuing CA, CRL distribution points, and OCSP servers.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"crl_distribution_points\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"issuing_certificates\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ocsp_servers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/config/urls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"config",
												"urls"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"crl_distribution_points\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"issuing_certificates\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ocsp_servers\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/certificate/config/urls",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"certificate",
														"config",
														"urls"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Set the CA certificate and private key used for generated credentials.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pem_bundle\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/config/ca",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"config",
										"ca"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"pem_bundle\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/config/ca",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"config",
												"ca"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "crl",
					"item": [
						{
							"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/crl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"crl"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/crl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"crl"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/crl/pem",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"crl",
										"pem"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/crl/pem",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"crl",
												"pem"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Force a rebuild of the CRL.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/crl/rotate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"crl",
										"rotate"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/crl/rotate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"crl",
												"rotate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "intermediate",
					"item": [
						{
							"name": "Generate a new CSR and private key used for signing.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"add_basic_constraints\": \"<boolean>\",\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_bits\": 2048,\n    \"key_type\": \"rsa\",\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"serial_number\": \"<string>\",\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/intermediate/generate/:exported",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"intermediate",
										"generate",
										":exported"
									],
									"variable": [
										{
											"key": "exported",
											"value": "<string>",
											"description": "(Required) Must be \"internal\" or \"exported\". If set to \"exported\", the generated private key will be returned. This is your *only* chance to retrieve the private key!"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"add_basic_constraints\": \"<boolean>\",\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_bits\": 2048,\n    \"key_type\": \"rsa\",\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"serial_number\": \"<string>\",\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/intermediate/generate/:exported",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"intermediate",
												"generate",
												":exported"
											],
											"variable": [
												{
													"key": "exported"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Provide the signed intermediate CA cert.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"certificate\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/intermediate/set-signed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"intermediate",
										"set-signed"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"certificate\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/intermediate/set-signed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"intermediate",
												"set-signed"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "Manage the roles that can be created with this backend.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/roles/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"roles",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) Name of the role"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/certificate/roles/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"certificate",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Manage the roles that can be created with this backend.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"allow_any_name\": \"<boolean>\",\n    \"allow_bare_domains\": \"<boolean>\",\n    \"allow_glob_domains\": \"<boolean>\",\n    \"allow_ip_sans\": true,\n    \"allow_localhost\": true,\n    \"allow_subdomains\": \"<boolean>\",\n    \"allowed_domains\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_domains_template\": false,\n    \"allowed_other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_serial_numbers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backend\": \"<string>\",\n    \"basic_constraints_valid_for_non_ca\": \"<boolean>\",\n    \"client_flag\": true,\n    \"code_signing_flag\": \"<boolean>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"email_protection_flag\": \"<boolean>\",\n    \"enforce_hostnames\": true,\n    \"ext_key_usage_oids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"generate_lease\": \"<boolean>\",\n    \"key_bits\": 2048,\n    \"key_type\": \"rsa\",\n    \"key_usage\": [\n        \"DigitalSignature\",\n        \"KeyAgreement\",\n        \"KeyEncipherment\"\n    ],\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_ttl\": \"<seconds>\",\n    \"no_store\": \"<boolean>\",\n    \"not_before_duration\": 30,\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"policy_identifiers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"require_cn\": true,\n    \"server_flag\": true,\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"use_csr_common_name\": true,\n    \"use_csr_sans\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/roles/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"roles",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) Name of the role"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allow_any_name\": \"<boolean>\",\n    \"allow_bare_domains\": \"<boolean>\",\n    \"allow_glob_domains\": \"<boolean>\",\n    \"allow_ip_sans\": true,\n    \"allow_localhost\": true,\n    \"allow_subdomains\": \"<boolean>\",\n    \"allowed_domains\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_domains_template\": false,\n    \"allowed_other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_serial_numbers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"backend\": \"<string>\",\n    \"basic_constraints_valid_for_non_ca\": \"<boolean>\",\n    \"client_flag\": true,\n    \"code_signing_flag\": \"<boolean>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"email_protection_flag\": \"<boolean>\",\n    \"enforce_hostnames\": true,\n    \"ext_key_usage_oids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"generate_lease\": \"<boolean>\",\n    \"key_bits\": 2048,\n    \"key_type\": \"rsa\",\n    \"key_usage\": [\n        \"DigitalSignature\",\n        \"KeyAgreement\",\n        \"KeyEncipherment\"\n    ],\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_ttl\": \"<seconds>\",\n    \"no_store\": \"<boolean>\",\n    \"not_before_duration\": 30,\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"policy_identifiers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"require_cn\": true,\n    \"server_flag\": true,\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"use_csr_common_name\": true,\n    \"use_csr_sans\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/certificate/roles/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"certificate",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Manage the roles that can be created with this backend.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/roles/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"roles",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) Name of the role"
												}
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/certificate/roles/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"certificate",
														"roles",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List the existing roles in this backend",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/roles?list=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"roles"
									],
									"query": [
										{
											"key": "list",
											"value": "<string>",
											"description": "Return a list if `true`"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/roles?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"roles"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "root",
					"item": [
						{
							"name": "Deletes the root CA key to allow a new one to be generated.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/root",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"root"
									]
								}
							},
							"response": [
								{
									"name": "empty body",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/certificate/root",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"root"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Generate a new CA certificate and private key used for signing.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_bits\": 2048,\n    \"key_type\": \"rsa\",\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_path_length\": -1,\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"permitted_dns_domains\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"serial_number\": \"<string>\",\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/root/generate/:exported",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"root",
										"generate",
										":exported"
									],
									"variable": [
										{
											"key": "exported",
											"value": "<string>",
											"description": "(Required) Must be \"internal\" or \"exported\". If set to \"exported\", the generated private key will be returned. This is your *only* chance to retrieve the private key!"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_bits\": 2048,\n    \"key_type\": \"rsa\",\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_path_length\": -1,\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"permitted_dns_domains\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"serial_number\": \"<string>\",\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/root/generate/:exported",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"root",
												"generate",
												":exported"
											],
											"variable": [
												{
													"key": "exported"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Issue an intermediate CA certificate based on the provided CSR.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_path_length\": -1,\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"permitted_dns_domains\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"serial_number\": \"<string>\",\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"use_csr_values\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/root/sign-intermediate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"root",
										"sign-intermediate"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"country\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"locality\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"max_path_length\": -1,\n    \"organization\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ou\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"permitted_dns_domains\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"postal_code\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"province\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"serial_number\": \"<string>\",\n    \"street_address\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"use_csr_values\": false\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/root/sign-intermediate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"root",
												"sign-intermediate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Signs another CA's self-issued certificate.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"certificate\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/root/sign-self-issued",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"root",
										"sign-self-issued"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"certificate\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/root/sign-self-issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"root",
												"sign-self-issued"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "sign-verbatim",
					"item": [
						{
							"name": "Request certificates using a certain role with the provided details.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"ext_key_usage_oids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_usage\": [\n        \"DigitalSignature\",\n        \"KeyAgreement\",\n        \"KeyEncipherment\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"role\": \"<string>\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/sign-verbatim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"sign-verbatim"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"ext_key_usage_oids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_usage\": [\n        \"DigitalSignature\",\n        \"KeyAgreement\",\n        \"KeyEncipherment\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"role\": \"<string>\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/sign-verbatim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"sign-verbatim"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Request certificates using a certain role with the provided details.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"ext_key_usage_oids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_usage\": [\n        \"DigitalSignature\",\n        \"KeyAgreement\",\n        \"KeyEncipherment\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/sign-verbatim/:role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"sign-verbatim",
										":role"
									],
									"variable": [
										{
											"key": "role",
											"value": "<string>",
											"description": "(Required) The desired role with configuration for this request"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"ext_key_usage_oids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"key_usage\": [\n        \"DigitalSignature\",\n        \"KeyAgreement\",\n        \"KeyEncipherment\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/certificate/sign-verbatim/:role",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"certificate",
												"sign-verbatim",
												":role"
											],
											"variable": [
												{
													"key": "role"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/certificate/ca_chain",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificate",
								"ca_chain"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/ca_chain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"ca_chain"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a CA, CRL, CA Chain, or non-revoked certificate.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/certificate/certs?list=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificate",
								"certs"
							],
							"query": [
								{
									"key": "list",
									"value": "<string>",
									"description": "Return a list if `true`"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/certificate/certs?list=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"certs"
									],
									"query": [
										{
											"key": "list",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Request a certificate using a certain role with the provided details.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/certificate/issue/:role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificate",
								"issue",
								":role"
							],
							"variable": [
								{
									"key": "role",
									"value": "<string>",
									"description": "(Required) The desired role with configuration for this request"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/issue/:role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"issue",
										":role"
									],
									"variable": [
										{
											"key": "role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Revoke a certificate by serial number.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"serial_number\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/certificate/revoke",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificate",
								"revoke"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"serial_number\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"revoke"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Request certificates using a certain role with the provided details.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/certificate/sign/:role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificate",
								"sign",
								":role"
							],
							"variable": [
								{
									"key": "role",
									"value": "<string>",
									"description": "(Required) The desired role with configuration for this request"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alt_names\": \"<string>\",\n    \"common_name\": \"<string>\",\n    \"csr\": \"\",\n    \"exclude_cn_from_sans\": false,\n    \"format\": \"pem\",\n    \"ip_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"other_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"private_key_format\": \"der\",\n    \"serial_number\": \"<string>\",\n    \"ttl\": \"<seconds>\",\n    \"uri_sans\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/sign/:role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"sign",
										":role"
									],
									"variable": [
										{
											"key": "role"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Tidy up the backend by removing expired certificates, revocation information,\nor both.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"safety_buffer\": 259200,\n    \"tidy_cert_store\": \"<boolean>\",\n    \"tidy_revocation_list\": \"<boolean>\",\n    \"tidy_revoked_certs\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/certificate/tidy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"certificate",
								"tidy"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"safety_buffer\": 259200,\n    \"tidy_cert_store\": \"<boolean>\",\n    \"tidy_revocation_list\": \"<boolean>\",\n    \"tidy_revoked_certs\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/tidy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"tidy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "cubbyhole/{path}",
			"item": [
				{
					"name": "Retrieve the secret at the specified location.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cubbyhole/:path?list=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cubbyhole",
								":path"
							],
							"query": [
								{
									"key": "list",
									"value": "<string>",
									"description": "Return a list if `true`"
								}
							],
							"variable": [
								{
									"key": "path",
									"value": "<string>",
									"description": "(Required) Specifies the path of the secret."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cubbyhole/:path?list=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cubbyhole",
										":path"
									],
									"query": [
										{
											"key": "list",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Store a secret at the specified location.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cubbyhole/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cubbyhole",
								":path"
							],
							"variable": [
								{
									"key": "path",
									"value": "<string>",
									"description": "(Required) Specifies the path of the secret."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cubbyhole/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cubbyhole",
										":path"
									],
									"variable": [
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Deletes the secret at the specified location.",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cubbyhole/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cubbyhole",
								":path"
							],
							"variable": [
								{
									"key": "path",
									"value": "<string>",
									"description": "(Required) Specifies the path of the secret."
								}
							]
						}
					},
					"response": [
						{
							"name": "empty body",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cubbyhole/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cubbyhole",
										":path"
									],
									"variable": [
										{
											"key": "path"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "identity",
			"item": [
				{
					"name": "alias",
					"item": [
						{
							"name": "id",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the alias"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the alias"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the alias"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List all the alias IDs.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/alias/id?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"alias",
												"id"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/alias/id?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"alias",
														"id"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create a new alias.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/alias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"alias"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/alias",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"alias"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "entity",
					"item": [
						{
							"name": "id",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Update, read or delete an entity using entity ID",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the entity. If set, updates the corresponding existing entity."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/entity/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an entity using entity ID",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"disabled\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/entity/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the entity. If set, updates the corresponding existing entity."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"disabled\": \"<boolean>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/entity/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an entity using entity ID",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the entity. If set, updates the corresponding existing entity."
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/entity/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List all the entity IDs",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/entity/id?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"entity",
												"id"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity/id?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"id"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "name",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "Update, read or delete an entity using entity name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the entity"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/entity/name/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity",
																"name",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an entity using entity name",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"disabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/entity/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the entity"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"disabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/entity/name/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity",
																"name",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an entity using entity name",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the entity"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/entity/name/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity",
																"name",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List all the entity names",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/entity/name?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"entity",
												"name"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity/name?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity",
														"name"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create a new entity",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/entity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"entity"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"disabled\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/entity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"entity"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete all of the entities provided",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/entity/batch-delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"entity",
										"batch-delete"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/entity/batch-delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"entity",
												"batch-delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Merge two or more entities together",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"force\": \"<boolean>\",\n    \"from_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"to_entity_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/entity/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"entity",
										"merge"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"force\": \"<boolean>\",\n    \"from_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"to_entity_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/entity/merge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"entity",
												"merge"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "entity-alias",
					"item": [
						{
							"name": "id",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity-alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity-alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the alias"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/entity-alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity-alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/entity-alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity-alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the alias"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/entity-alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity-alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity-alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity-alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the alias"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/entity-alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"entity-alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List all the alias IDs.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/entity-alias/id?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"entity-alias",
												"id"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/entity-alias/id?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"entity-alias",
														"id"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create a new alias.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/entity-alias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"entity-alias"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"entity_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/entity-alias",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"entity-alias"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "group",
					"item": [
						{
							"name": "id",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Update or delete an existing group using its ID.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the group. If set, updates the corresponding existing group."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/group/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update or delete an existing group using its ID.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"member_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"member_group_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the group. If set, updates the corresponding existing group."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"member_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"member_group_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/group/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update or delete an existing group using its ID.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the group. If set, updates the corresponding existing group."
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/group/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List all the group IDs.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/group/id?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group",
												"id"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/id?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"id"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "name",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "get Identity Group Name Name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the group."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/group/name/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group",
																"name",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "post Identity Group Name Name",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"member_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"member_group_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the group."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<string>\",\n    \"member_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"member_group_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/group/name/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group",
																"name",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "delete Identity Group Name Name",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/name/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"name",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the group."
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/group/name/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group",
																"name",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "get Identity Group Name",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/group/name?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group",
												"name"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group/name?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group",
														"name"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create a new group.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<string>\",\n    \"member_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"member_group_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"group"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\",\n    \"member_entity_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"member_group_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"metadata\": \"<object>\",\n    \"name\": \"<string>\",\n    \"policies\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "group-alias",
					"item": [
						{
							"name": "id",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "get Identity Group Alias Id Id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group-alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group-alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the group alias."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/group-alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group-alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "post Identity Group Alias Id Id",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/group-alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group-alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the group alias."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/group-alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group-alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "delete Identity Group Alias Id Id",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group-alias/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group-alias",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the group alias."
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/group-alias/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"group-alias",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List all the group alias IDs.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/group-alias/id?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group-alias",
												"id"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/group-alias/id?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"group-alias",
														"id"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Creates a new group alias, or updates an existing one.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/group-alias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"group-alias"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"canonical_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/group-alias",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"group-alias"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "lookup",
					"item": [
						{
							"name": "Query entities based on various properties.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alias_id\": \"<string>\",\n    \"alias_mount_accessor\": \"<string>\",\n    \"alias_name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/lookup/entity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"lookup",
										"entity"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alias_id\": \"<string>\",\n    \"alias_mount_accessor\": \"<string>\",\n    \"alias_name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/lookup/entity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"lookup",
												"entity"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Query groups based on various properties.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"alias_id\": \"<string>\",\n    \"alias_mount_accessor\": \"<string>\",\n    \"alias_name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/lookup/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"lookup",
										"group"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alias_id\": \"<string>\",\n    \"alias_mount_accessor\": \"<string>\",\n    \"alias_name\": \"<string>\",\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/lookup/group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"lookup",
												"group"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "oidc",
					"item": [
						{
							"name": ".well-known",
							"item": [
								{
									"name": "Retrieve public keys",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/.well-known/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												".well-known",
												"keys"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/.well-known/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														".well-known",
														"keys"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Query OIDC configurations",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/.well-known/openid-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												".well-known",
												"openid-configuration"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/.well-known/openid-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														".well-known",
														"openid-configuration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "config",
							"item": [
								{
									"name": "OIDC configuration",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												"config"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"config"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "OIDC configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issuer\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												"config"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issuer\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"config"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "key",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "CRUD operations for OIDC keys.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/key/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"key",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the key"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/oidc/key/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"oidc",
																"key",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "CRUD operations for OIDC keys.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"algorithm\": \"RS256\",\n    \"allowed_client_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rotation_period\": \"24h\",\n    \"verification_ttl\": \"24h\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/key/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"key",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the key"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"algorithm\": \"RS256\",\n    \"allowed_client_ids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rotation_period\": \"24h\",\n    \"verification_ttl\": \"24h\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/oidc/key/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"oidc",
																"key",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "CRUD operations for OIDC keys.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/key/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"key",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the key"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/oidc/key/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"oidc",
																"key",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Rotate a named OIDC key.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"verification_ttl\": \"<seconds>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/key/:name/rotate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"key",
														":name",
														"rotate"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the key"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"verification_ttl\": \"<seconds>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/oidc/key/:name/rotate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"oidc",
																"key",
																":name",
																"rotate"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List OIDC keys",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/key?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												"key"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/key?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"key"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "role",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "CRUD operations on OIDC Roles",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/role/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"role",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the role"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/oidc/role/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"oidc",
																"role",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "CRUD operations on OIDC Roles",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"client_id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"template\": \"<string>\",\n    \"ttl\": \"24h\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/role/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"role",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the role"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"client_id\": \"<string>\",\n    \"key\": \"<string>\",\n    \"template\": \"<string>\",\n    \"ttl\": \"24h\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/oidc/role/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"oidc",
																"role",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "CRUD operations on OIDC Roles",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/role/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"role",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the role"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/oidc/role/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"oidc",
																"role",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List configured OIDC roles",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/role?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												"role"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/oidc/role?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"oidc",
														"role"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Verify the authenticity of an OIDC token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"<string>\",\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/oidc/introspect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"oidc",
										"introspect"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"client_id\": \"<string>\",\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/introspect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												"introspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Generate an OIDC token",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/oidc/token/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"oidc",
										"token",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<string>",
											"description": "(Required) Name of the role"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/oidc/token/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"oidc",
												"token",
												":name"
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "persona",
					"item": [
						{
							"name": "id",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/persona/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"persona",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the persona"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/persona/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"persona",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"entity_id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/identity/persona/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"persona",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the persona"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"entity_id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/identity/persona/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"persona",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update, read or delete an alias ID.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/persona/id/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"persona",
														"id",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"description": "(Required) ID of the persona"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/identity/persona/id/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"identity",
																"persona",
																"id",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List all the alias IDs.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/identity/persona/id?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"persona",
												"id"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/identity/persona/id?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"identity",
														"persona",
														"id"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Create a new alias.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entity_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/identity/persona",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"persona"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entity_id\": \"<string>\",\n    \"id\": \"<string>\",\n    \"metadata\": \"<object>\",\n    \"mount_accessor\": \"<string>\",\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/identity/persona",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"identity",
												"persona"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "secret",
			"item": [
				{
					"name": "config",
					"item": [
						{
							"name": "Read the backend level settings.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secret/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Configure backend level settings that are applied to every key in the key-value store.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cas_required\": \"<boolean>\",\n    \"delete_version_after\": \"<seconds>\",\n    \"max_versions\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"config"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cas_required\": \"<boolean>\",\n    \"delete_version_after\": \"<seconds>\",\n    \"max_versions\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/secret/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "data/{path}",
					"item": [
						{
							"name": "Write, Read, and Delete data in the Key-Value Store.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret/data/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"data",
										":path"
									],
									"variable": [
										{
											"key": "path",
											"value": "<string>",
											"description": "(Required) Location of the secret."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secret/data/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"data",
												":path"
											],
											"variable": [
												{
													"key": "path"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Write, Read, and Delete data in the Key-Value Store.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": \"<object>\",\n    \"options\": \"<object>\",\n    \"version\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret/data/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"data",
										":path"
									],
									"variable": [
										{
											"key": "path",
											"value": "<string>",
											"description": "(Required) Location of the secret."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"data\": \"<object>\",\n    \"options\": \"<object>\",\n    \"version\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/secret/data/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"data",
												":path"
											],
											"variable": [
												{
													"key": "path"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Write, Read, and Delete data in the Key-Value Store.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret/data/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"data",
										":path"
									],
									"variable": [
										{
											"key": "path",
											"value": "<string>",
											"description": "(Required) Location of the secret."
										}
									]
								}
							},
							"response": [
								{
									"name": "empty body",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secret/data/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"data",
												":path"
											],
											"variable": [
												{
													"key": "path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "metadata/{path}",
					"item": [
						{
							"name": "Configures settings for the KV store",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret/metadata/:path?list=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"metadata",
										":path"
									],
									"query": [
										{
											"key": "list",
											"value": "<string>",
											"description": "Return a list if `true`"
										}
									],
									"variable": [
										{
											"key": "path",
											"value": "<string>",
											"description": "(Required) Location of the secret."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secret/metadata/:path?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"metadata",
												":path"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "path"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Configures settings for the KV store",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cas_required\": \"<boolean>\",\n    \"delete_version_after\": \"<seconds>\",\n    \"max_versions\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret/metadata/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"metadata",
										":path"
									],
									"variable": [
										{
											"key": "path",
											"value": "<string>",
											"description": "(Required) Location of the secret."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cas_required\": \"<boolean>\",\n    \"delete_version_after\": \"<seconds>\",\n    \"max_versions\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/secret/metadata/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"metadata",
												":path"
											],
											"variable": [
												{
													"key": "path"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Configures settings for the KV store",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/secret/metadata/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"metadata",
										":path"
									],
									"variable": [
										{
											"key": "path",
											"value": "<string>",
											"description": "(Required) Location of the secret."
										}
									]
								}
							},
							"response": [
								{
									"name": "empty body",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/secret/metadata/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"secret",
												"metadata",
												":path"
											],
											"variable": [
												{
													"key": "path"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Marks one or more versions as deleted in the KV store.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"versions\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret/delete/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret",
								"delete",
								":path"
							],
							"variable": [
								{
									"key": "path",
									"value": "<string>",
									"description": "(Required) Location of the secret."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"versions\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret/delete/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"delete",
										":path"
									],
									"variable": [
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Permanently removes one or more versions in the KV store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"versions\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret/destroy/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret",
								"destroy",
								":path"
							],
							"variable": [
								{
									"key": "path",
									"value": "<string>",
									"description": "(Required) Location of the secret."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"versions\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret/destroy/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"destroy",
										":path"
									],
									"variable": [
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Undeletes one or more versions from the KV store.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"versions\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/secret/undelete/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"secret",
								"undelete",
								":path"
							],
							"variable": [
								{
									"key": "path",
									"value": "<string>",
									"description": "(Required) Location of the secret."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"versions\": [\n        \"<integer>\",\n        \"<integer>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/secret/undelete/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"secret",
										"undelete",
										":path"
									],
									"variable": [
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "sys",
			"item": [
				{
					"name": "audit",
					"item": [
						{
							"name": "{path}",
							"item": [
								{
									"name": "Enable a new audit device at the supplied path.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"<string>\",\n    \"local\": false,\n    \"options\": \"<object>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/audit/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"audit",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) The name of the backend. Cannot be delimited. Example: \"mysql\""
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"local\": false,\n    \"options\": \"<object>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/audit/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"audit",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable the audit device at the given path.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/audit/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"audit",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) The name of the backend. Cannot be delimited. Example: \"mysql\""
												}
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/audit/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"audit",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List the enabled audit devices.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/audit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"audit"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/audit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"audit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "{path}",
							"item": [
								{
									"name": "tune",
									"item": [
										{
											"name": "Reads the given auth path's configuration.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/auth/:path/tune",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"auth",
														":path",
														"tune"
													],
													"variable": [
														{
															"key": "path",
															"value": "<string>",
															"description": "(Required) Tune the configuration parameters for an auth path."
														}
													]
												},
												"description": "This endpoint requires sudo capability on the final path, but the same functionality can be achieved without sudo via `sys/mounts/auth/[auth-path]/tune`."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/auth/:path/tune",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"auth",
																":path",
																"tune"
															],
															"variable": [
																{
																	"key": "path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Tune configuration parameters for a given auth path.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allowed_response_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_request_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_response_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"default_lease_ttl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"listing_visibility\": \"<string>\",\n    \"max_lease_ttl\": \"<string>\",\n    \"options\": \"<object>\",\n    \"passthrough_request_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/auth/:path/tune",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"auth",
														":path",
														"tune"
													],
													"variable": [
														{
															"key": "path",
															"value": "<string>",
															"description": "(Required) Tune the configuration parameters for an auth path."
														}
													]
												},
												"description": "This endpoint requires sudo capability on the final path, but the same functionality can be achieved without sudo via `sys/mounts/auth/[auth-path]/tune`."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"allowed_response_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_request_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_response_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"default_lease_ttl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"listing_visibility\": \"<string>\",\n    \"max_lease_ttl\": \"<string>\",\n    \"options\": \"<object>\",\n    \"passthrough_request_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_type\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/auth/:path/tune",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"auth",
																":path",
																"tune"
															],
															"variable": [
																{
																	"key": "path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Enables a new auth method.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config\": \"<object>\",\n    \"description\": \"<string>\",\n    \"external_entropy_access\": false,\n    \"local\": false,\n    \"options\": \"<object>\",\n    \"plugin_name\": \"<string>\",\n    \"seal_wrap\": false,\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/auth/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"auth",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) The path to mount to. Cannot be delimited. Example: \"user\""
												}
											]
										},
										"description": "After enabling, the auth method can be accessed and configured via the auth path specified as part of the URL. This auth path will be nested under the auth prefix.\n\nFor example, enable the \"foo\" auth method will make it accessible at /auth/foo."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": \"<object>\",\n    \"description\": \"<string>\",\n    \"external_entropy_access\": false,\n    \"local\": false,\n    \"options\": \"<object>\",\n    \"plugin_name\": \"<string>\",\n    \"seal_wrap\": false,\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/auth/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"auth",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable the auth method at the given auth path",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/auth/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"auth",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) The path to mount to. Cannot be delimited. Example: \"user\""
												}
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/auth/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"auth",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List the currently enabled credential backends.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"auth"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "config",
					"item": [
						{
							"name": "auditing/request-headers",
							"item": [
								{
									"name": "{header}",
									"item": [
										{
											"name": "List the information for the given request header.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/auditing/request-headers/:header",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"auditing",
														"request-headers",
														":header"
													],
													"variable": [
														{
															"key": "header",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/config/auditing/request-headers/:header",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"config",
																"auditing",
																"request-headers",
																":header"
															],
															"variable": [
																{
																	"key": "header"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Enable auditing of a header.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"hmac\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/config/auditing/request-headers/:header",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"auditing",
														"request-headers",
														":header"
													],
													"variable": [
														{
															"key": "header",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"hmac\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/config/auditing/request-headers/:header",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"config",
																"auditing",
																"request-headers",
																":header"
															],
															"variable": [
																{
																	"key": "header"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Disable auditing of the given request header.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/auditing/request-headers/:header",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"auditing",
														"request-headers",
														":header"
													],
													"variable": [
														{
															"key": "header",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/config/auditing/request-headers/:header",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"config",
																"auditing",
																"request-headers",
																":header"
															],
															"variable": [
																{
																	"key": "header"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List the request headers that are configured to be audited.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/config/auditing/request-headers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"config",
												"auditing",
												"request-headers"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/auditing/request-headers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"auditing",
														"request-headers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "cors",
							"item": [
								{
									"name": "Return the current CORS settings.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/config/cors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"config",
												"cors"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/cors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"cors"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Configure the CORS settings.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"allowed_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_origins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"enable\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/config/cors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"config",
												"cors"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allowed_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowed_origins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"enable\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/config/cors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"cors"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove any CORS settings.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/config/cors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"config",
												"cors"
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/cors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"cors"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "ui/headers",
							"item": [
								{
									"name": "{header}",
									"item": [
										{
											"name": "Return the given UI header's configuration",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/ui/headers/:header",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"ui",
														"headers",
														":header"
													],
													"variable": [
														{
															"key": "header",
															"value": "<string>",
															"description": "(Required) The name of the header."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/config/ui/headers/:header",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"config",
																"ui",
																"headers",
																":header"
															],
															"variable": [
																{
																	"key": "header"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Configure the values to be returned for the UI header.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"values\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/config/ui/headers/:header",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"ui",
														"headers",
														":header"
													],
													"variable": [
														{
															"key": "header",
															"value": "<string>",
															"description": "(Required) The name of the header."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"values\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/config/ui/headers/:header",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"config",
																"ui",
																"headers",
																":header"
															],
															"variable": [
																{
																	"key": "header"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove a UI header.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/ui/headers/:header",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"ui",
														"headers",
														":header"
													],
													"variable": [
														{
															"key": "header",
															"value": "<string>",
															"description": "(Required) The name of the header."
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/config/ui/headers/:header",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"config",
																"ui",
																"headers",
																":header"
															],
															"variable": [
																{
																	"key": "header"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Return a list of configured UI headers.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/config/ui/headers/?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"config",
												"ui",
												"headers",
												""
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/config/ui/headers/?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"config",
														"ui",
														"headers",
														""
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Return a sanitized version of the Vault server configuration.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/config/state/sanitized",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"config",
										"state",
										"sanitized"
									]
								},
								"description": "The sanitized output strips configuration values in the storage, HA storage, and seals stanzas, which may contain sensitive values such as API tokens. It also removes any token or secret fields in other stanzas, such as the circonus_api_token from telemetry."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/config/state/sanitized",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"config",
												"state",
												"sanitized"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "generate-root",
					"item": [
						{
							"name": "attempt",
							"item": [
								{
									"name": "Read the configuration and progress of the current root generation attempt.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/generate-root/attempt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"generate-root",
												"attempt"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/generate-root/attempt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"generate-root",
														"attempt"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Initializes a new root generation attempt.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"pgp_key\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/generate-root/attempt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"generate-root",
												"attempt"
											]
										},
										"description": "Only a single root generation attempt can take place at a time. One (and only one) of otp or pgp_key are required."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"pgp_key\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/generate-root/attempt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"generate-root",
														"attempt"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Cancels any in-progress root generation attempt.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/generate-root/attempt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"generate-root",
												"attempt"
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/generate-root/attempt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"generate-root",
														"attempt"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Read the configuration and progress of the current root generation attempt.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/generate-root",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"generate-root"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/generate-root",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"generate-root"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Initializes a new root generation attempt.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pgp_key\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/generate-root",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"generate-root"
									]
								},
								"description": "Only a single root generation attempt can take place at a time. One (and only one) of otp or pgp_key are required."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"pgp_key\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/generate-root",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"generate-root"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Cancels any in-progress root generation attempt.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/generate-root",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"generate-root"
									]
								}
							},
							"response": [
								{
									"name": "empty body",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/generate-root",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"generate-root"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Enter a single master key share to progress the root generation attempt.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"<string>\",\n    \"nonce\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/generate-root/update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"generate-root",
										"update"
									]
								},
								"description": "If the threshold number of master key shares is reached, Vault will complete the root generation and issue the new token. Otherwise, this API must be called multiple times until that threshold is met. The attempt nonce must be provided with each call."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"nonce\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/generate-root/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"generate-root",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "init",
					"item": [
						{
							"name": "Returns the initialization status of Vault.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"init"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/init",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"init"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Initialize a new Vault.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pgp_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"recovery_pgp_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"recovery_shares\": \"<integer>\",\n    \"recovery_threshold\": \"<integer>\",\n    \"root_token_pgp_key\": \"<string>\",\n    \"secret_shares\": \"<integer>\",\n    \"secret_threshold\": \"<integer>\",\n    \"stored_shares\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/init",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"init"
									]
								},
								"description": "The Vault must not have been previously initialized. The recovery options, as well as the stored shares option, are only available when using Vault HSM."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"pgp_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"recovery_pgp_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"recovery_shares\": \"<integer>\",\n    \"recovery_threshold\": \"<integer>\",\n    \"root_token_pgp_key\": \"<string>\",\n    \"secret_shares\": \"<integer>\",\n    \"secret_threshold\": \"<integer>\",\n    \"stored_shares\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/init",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"init"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "internal",
					"item": [
						{
							"name": "ui",
							"item": [
								{
									"name": "mounts",
									"item": [
										{
											"name": "Lists all enabled and visible auth and secrets mounts.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/internal/ui/mounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"internal",
														"ui",
														"mounts"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/internal/ui/mounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"internal",
																"ui",
																"mounts"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Return information about the given mount.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/internal/ui/mounts/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"internal",
														"ui",
														"mounts",
														":path"
													],
													"variable": [
														{
															"key": "path",
															"value": "<string>",
															"description": "(Required) The path of the mount."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/internal/ui/mounts/:path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"internal",
																"ui",
																"mounts",
																":path"
															],
															"variable": [
																{
																	"key": "path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Generate an OpenAPI 3 document of all mounted paths.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/internal/specs/openapi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"internal",
										"specs",
										"openapi"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/internal/specs/openapi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"internal",
												"specs",
												"openapi"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "leases",
					"item": [
						{
							"name": "lookup",
							"item": [
								{
									"name": "Retrieve lease metadata.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lease_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/leases/lookup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"lookup"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"lease_id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/leases/lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"leases",
														"lookup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Returns a list of lease ids.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/leases/lookup/?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"lookup",
												""
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/leases/lookup/?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"leases",
														"lookup",
														""
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Returns a list of lease ids.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/leases/lookup/:prefix?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"lookup",
												":prefix"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											],
											"variable": [
												{
													"key": "prefix",
													"value": "<string>",
													"description": "(Required) The path to list leases under. Example: \"aws/creds/deploy\""
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/leases/lookup/:prefix?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"leases",
														"lookup",
														":prefix"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "prefix"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "renew",
							"item": [
								{
									"name": "Renews a lease, requesting to extend the lease.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\",\n    \"url_lease_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/leases/renew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"renew"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\",\n    \"url_lease_id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/leases/renew",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"leases",
														"renew"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Renews a lease, requesting to extend the lease.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/leases/renew/:url_lease_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"renew",
												":url_lease_id"
											],
											"variable": [
												{
													"key": "url_lease_id",
													"value": "<string>",
													"description": "(Required) The lease identifier to renew. This is included with a lease."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/leases/renew/:url_lease_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"leases",
														"renew",
														":url_lease_id"
													],
													"variable": [
														{
															"key": "url_lease_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "revoke",
							"item": [
								{
									"name": "Revokes a lease immediately.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true,\n    \"url_lease_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/leases/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"revoke"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true,\n    \"url_lease_id\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/leases/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"leases",
														"revoke"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Revokes a lease immediately.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/leases/revoke/:url_lease_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"revoke",
												":url_lease_id"
											],
											"variable": [
												{
													"key": "url_lease_id",
													"value": "<string>",
													"description": "(Required) The lease identifier to renew. This is included with a lease."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/leases/revoke/:url_lease_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"leases",
														"revoke",
														":url_lease_id"
													],
													"variable": [
														{
															"key": "url_lease_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Revokes all secrets or tokens generated under a given prefix immediately",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/leases/revoke-force/:prefix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"leases",
										"revoke-force",
										":prefix"
									],
									"variable": [
										{
											"key": "prefix",
											"value": "<string>",
											"description": "(Required) The path to revoke keys under. Example: \"prod/aws/ops\""
										}
									]
								},
								"description": "Unlike `/sys/leases/revoke-prefix`, this path ignores backend errors encountered during revocation. This is potentially very dangerous and should only be used in specific emergency situations where errors in the backend or the connected backend service prevent normal revocation.\n\nBy ignoring these errors, Vault abdicates responsibility for ensuring that the issued credentials or secrets are properly revoked and/or cleaned up. Access to this endpoint should be tightly controlled."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/leases/revoke-force/:prefix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"revoke-force",
												":prefix"
											],
											"variable": [
												{
													"key": "prefix"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Revokes all secrets (via a lease ID prefix) or tokens (via the tokens' path property) generated under a given prefix immediately.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sync\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/leases/revoke-prefix/:prefix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"leases",
										"revoke-prefix",
										":prefix"
									],
									"variable": [
										{
											"key": "prefix",
											"value": "<string>",
											"description": "(Required) The path to revoke keys under. Example: \"prod/aws/ops\""
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sync\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/leases/revoke-prefix/:prefix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"revoke-prefix",
												":prefix"
											],
											"variable": [
												{
													"key": "prefix"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint performs cleanup tasks that can be run if certain error\nconditions have occurred.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/leases/tidy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"leases",
										"tidy"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/leases/tidy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"leases",
												"tidy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "mounts",
					"item": [
						{
							"name": "{path}",
							"item": [
								{
									"name": "tune",
									"item": [
										{
											"name": "Tune backend configuration parameters for this mount.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/mounts/:path/tune",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"mounts",
														":path",
														"tune"
													],
													"variable": [
														{
															"key": "path",
															"value": "<string>",
															"description": "(Required) The path to mount to. Example: \"aws/east\""
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/mounts/:path/tune",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"mounts",
																":path",
																"tune"
															],
															"variable": [
																{
																	"key": "path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Tune backend configuration parameters for this mount.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"allowed_response_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_request_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_response_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"default_lease_ttl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"listing_visibility\": \"<string>\",\n    \"max_lease_ttl\": \"<string>\",\n    \"options\": \"<object>\",\n    \"passthrough_request_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/mounts/:path/tune",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"mounts",
														":path",
														"tune"
													],
													"variable": [
														{
															"key": "path",
															"value": "<string>",
															"description": "(Required) The path to mount to. Example: \"aws/east\""
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"allowed_response_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_request_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"audit_non_hmac_response_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"default_lease_ttl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"listing_visibility\": \"<string>\",\n    \"max_lease_ttl\": \"<string>\",\n    \"options\": \"<object>\",\n    \"passthrough_request_headers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token_type\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/mounts/:path/tune",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"mounts",
																":path",
																"tune"
															],
															"variable": [
																{
																	"key": "path"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Enable a new secrets engine at the given path.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"config\": \"<object>\",\n    \"description\": \"<string>\",\n    \"external_entropy_access\": false,\n    \"local\": false,\n    \"options\": \"<object>\",\n    \"plugin_name\": \"<string>\",\n    \"seal_wrap\": false,\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/mounts/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"mounts",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) The path to mount to. Example: \"aws/east\""
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"config\": \"<object>\",\n    \"description\": \"<string>\",\n    \"external_entropy_access\": false,\n    \"local\": false,\n    \"options\": \"<object>\",\n    \"plugin_name\": \"<string>\",\n    \"seal_wrap\": false,\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/mounts/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"mounts",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable the mount point specified at the given path.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/mounts/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"mounts",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) The path to mount to. Example: \"aws/east\""
												}
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/mounts/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"mounts",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List the currently mounted backends.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/mounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"mounts"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/mounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"mounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "plugins",
					"item": [
						{
							"name": "catalog",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "Return the configuration data for the plugin with the given name.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/plugins/catalog/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"plugins",
														"catalog",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name of the plugin"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/plugins/catalog/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"plugins",
																"catalog",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Register a new plugin, or updates an existing one with the supplied name.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"args\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"command\": \"<string>\",\n    \"env\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"sha256\": \"<string>\",\n    \"sha_256\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/plugins/catalog/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"plugins",
														"catalog",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name of the plugin"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"args\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"command\": \"<string>\",\n    \"env\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"sha256\": \"<string>\",\n    \"sha_256\": \"<string>\",\n    \"type\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/plugins/catalog/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"plugins",
																"catalog",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove the plugin with the given name.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/plugins/catalog/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"plugins",
														"catalog",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name of the plugin"
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/plugins/catalog/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"plugins",
																"catalog",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{type}",
									"item": [
										{
											"name": "{name}",
											"item": [
												{
													"name": "Return the configuration data for the plugin with the given name.",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/plugins/catalog/:type/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"plugins",
																"catalog",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) The name of the plugin"
																},
																{
																	"key": "type",
																	"value": "<string>",
																	"description": "(Required) The type of the plugin, may be auth, secret, or database"
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/sys/plugins/catalog/:type/:name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sys",
																		"plugins",
																		"catalog",
																		":type",
																		":name"
																	],
																	"variable": [
																		{
																			"key": "type"
																		},
																		{
																			"key": "name"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Register a new plugin, or updates an existing one with the supplied name.",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"args\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"command\": \"<string>\",\n    \"env\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"sha256\": \"<string>\",\n    \"sha_256\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/plugins/catalog/:type/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"plugins",
																"catalog",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) The name of the plugin"
																},
																{
																	"key": "type",
																	"value": "<string>",
																	"description": "(Required) The type of the plugin, may be auth, secret, or database"
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"args\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"command\": \"<string>\",\n    \"env\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"sha256\": \"<string>\",\n    \"sha_256\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/sys/plugins/catalog/:type/:name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sys",
																		"plugins",
																		"catalog",
																		":type",
																		":name"
																	],
																	"variable": [
																		{
																			"key": "type"
																		},
																		{
																			"key": "name"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Remove the plugin with the given name.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/plugins/catalog/:type/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"plugins",
																"catalog",
																":type",
																":name"
															],
															"variable": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) The name of the plugin"
																},
																{
																	"key": "type",
																	"value": "<string>",
																	"description": "(Required) The type of the plugin, may be auth, secret, or database"
																}
															]
														}
													},
													"response": [
														{
															"name": "empty body",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/sys/plugins/catalog/:type/:name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"sys",
																		"plugins",
																		"catalog",
																		":type",
																		":name"
																	],
																	"variable": [
																		{
																			"key": "type"
																		},
																		{
																			"key": "name"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "List the plugins in the catalog.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/plugins/catalog/:type?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"plugins",
														"catalog",
														":type"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>",
															"description": "Return a list if `true`"
														}
													],
													"variable": [
														{
															"key": "type",
															"value": "<string>",
															"description": "(Required) The type of the plugin, may be auth, secret, or database"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/plugins/catalog/:type?list=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"plugins",
																"catalog",
																":type"
															],
															"query": [
																{
																	"key": "list",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "type"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Lists all the plugins known to Vault",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/plugins/catalog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"plugins",
												"catalog"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/plugins/catalog",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"plugins",
														"catalog"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Reload mounted plugin backends.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mounts\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"plugin\": \"<string>\",\n    \"scope\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/plugins/reload/backend",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"plugins",
										"reload",
										"backend"
									]
								},
								"description": "Either the plugin name (`plugin`) or the desired plugin backend mounts (`mounts`) must be provided, but not both. In the case that the plugin name is provided, all mounted paths that use that plugin backend will be reloaded.  If (`scope`) is provided and is (`global`), the plugin(s) are reloaded globally."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mounts\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"plugin\": \"<string>\",\n    \"scope\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/plugins/reload/backend",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"plugins",
												"reload",
												"backend"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "policies",
					"item": [
						{
							"name": "acl",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "Retrieve information about the named ACL policy.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policies/acl/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"acl",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name of the policy. Example: \"ops\""
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/policies/acl/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"policies",
																"acl",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add a new or update an existing ACL policy.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policy\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/policies/acl/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"acl",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name of the policy. Example: \"ops\""
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policy\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/policies/acl/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"policies",
																"acl",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete the ACL policy with the given name.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policies/acl/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"acl",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name of the policy. Example: \"ops\""
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/policies/acl/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"policies",
																"acl",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List the configured access control policies.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/policies/acl?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policies",
												"acl"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policies/acl?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"acl"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "password/{name}",
							"item": [
								{
									"name": "Retrieve an existing password policy.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/policies/password/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policies",
												"password",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) The name of the password policy."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policies/password/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"password",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a new or update an existing password policy.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policy\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/policies/password/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policies",
												"password",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) The name of the password policy."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policy\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/policies/password/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"password",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a password policy.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/policies/password/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policies",
												"password",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) The name of the password policy."
												}
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policies/password/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"password",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Generate a password from an existing password policy.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/policies/password/:name/generate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policies",
												"password",
												":name",
												"generate"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) The name of the password policy."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policies/password/:name/generate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policies",
														"password",
														":name",
														"generate"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "policy",
					"item": [
						{
							"name": "{name}",
							"item": [
								{
									"name": "Retrieve the policy body for the named policy.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/policy/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policy",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) The name of the policy. Example: \"ops\""
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policy/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policy",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a new or update an existing policy.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policy\": \"<string>\",\n    \"rules\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/policy/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policy",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) The name of the policy. Example: \"ops\""
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policy\": \"<string>\",\n    \"rules\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/policy/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policy",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete the policy with the given name.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/policy/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policy",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"description": "(Required) The name of the policy. Example: \"ops\""
												}
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/policy/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"policy",
														":name"
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List the configured access control policies.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/policy?list=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"policy"
									],
									"query": [
										{
											"key": "list",
											"value": "<string>",
											"description": "Return a list if `true`"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/policy?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"policy"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "pprof",
					"item": [
						{
							"name": "Returns an HTML page listing the available profiles.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/pprof/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"pprof",
										""
									]
								},
								"description": "Returns an HTML page listing the available \nprofiles. This should be mainly accessed via browsers or applications that can \nrender pages."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/pprof/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"pprof",
												""
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns the running program's command line.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/pprof/cmdline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"pprof",
										"cmdline"
									]
								},
								"description": "Returns the running program's command line, with arguments separated by NUL bytes."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/pprof/cmdline",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"pprof",
												"cmdline"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns stack traces of all current goroutines.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/pprof/goroutine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"pprof",
										"goroutine"
									]
								},
								"description": "Returns stack traces of all current goroutines."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/pprof/goroutine",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"pprof",
												"goroutine"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns a sampling of memory allocations of live object.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/pprof/heap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"pprof",
										"heap"
									]
								},
								"description": "Returns a sampling of memory allocations of live object."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/pprof/heap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"pprof",
												"heap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns a pprof-formatted cpu profile payload.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/pprof/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"pprof",
										"profile"
									]
								},
								"description": "Returns a pprof-formatted cpu profile payload. Profiling lasts for duration specified in seconds GET parameter, or for 30 seconds if not specified."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/pprof/profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"pprof",
												"profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns the program counters listed in the request.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/pprof/symbol",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"pprof",
										"symbol"
									]
								},
								"description": "Returns the program counters listed in the request."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/pprof/symbol",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"pprof",
												"symbol"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Returns the execution trace in binary form.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/pprof/trace",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"pprof",
										"trace"
									]
								},
								"description": "Returns  the execution trace in binary form. Tracing lasts for duration specified in seconds GET parameter, or for 1 second if not specified."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/pprof/trace",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"pprof",
												"trace"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "quotas",
					"item": [
						{
							"name": "config",
							"item": [
								{
									"name": "get Sys Quotas Config",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/quotas/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"quotas",
												"config"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/quotas/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"quotas",
														"config"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "post Sys Quotas Config",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enable_rate_limit_audit_logging\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/quotas/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"quotas",
												"config"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"enable_rate_limit_audit_logging\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/quotas/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"quotas",
														"config"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "rate-limit",
							"item": [
								{
									"name": "{name}",
									"item": [
										{
											"name": "get Sys Quotas Rate Limit Name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/quotas/rate-limit/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"quotas",
														"rate-limit",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the quota rule."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/quotas/rate-limit/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"quotas",
																"rate-limit",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "post Sys Quotas Rate Limit Name",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"path\": \"<string>\",\n    \"rate\": {},\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/quotas/rate-limit/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"quotas",
														"rate-limit",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the quota rule."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"path\": \"<string>\",\n    \"rate\": {},\n    \"type\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/sys/quotas/rate-limit/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"quotas",
																"rate-limit",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "delete Sys Quotas Rate Limit Name",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/quotas/rate-limit/:name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"quotas",
														"rate-limit",
														":name"
													],
													"variable": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) Name of the quota rule."
														}
													]
												}
											},
											"response": [
												{
													"name": "empty body",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sys/quotas/rate-limit/:name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sys",
																"quotas",
																"rate-limit",
																":name"
															],
															"variable": [
																{
																	"key": "name"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "get Sys Quotas Rate Limit",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/quotas/rate-limit?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"quotas",
												"rate-limit"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/quotas/rate-limit?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"quotas",
														"rate-limit"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "raw",
					"item": [
						{
							"name": "{path}",
							"item": [
								{
									"name": "Read the value of the key at the given path.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/raw/:path?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"raw",
												":path"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>",
													"description": "Return a list if `true`"
												}
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/raw/:path?list=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"raw",
														":path"
													],
													"query": [
														{
															"key": "list",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update the value of the key at the given path.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/raw/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"raw",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/raw/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"raw",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete the key with given path.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/raw/:path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"raw",
												":path"
											],
											"variable": [
												{
													"key": "path",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/raw/:path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"raw",
														":path"
													],
													"variable": [
														{
															"key": "path"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Read the value of the key at the given path.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/raw?list=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"raw"
									],
									"query": [
										{
											"key": "list",
											"value": "<string>",
											"description": "Return a list if `true`"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/raw?list=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"raw"
											],
											"query": [
												{
													"key": "list",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update the value of the key at the given path.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"path\": \"<string>\",\n    \"value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"raw"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"path\": \"<string>\",\n    \"value\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/raw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"raw"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete the key with given path.",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"raw"
									]
								}
							},
							"response": [
								{
									"name": "empty body",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/raw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"raw"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "rekey",
					"item": [
						{
							"name": "backup",
							"item": [
								{
									"name": "Return the backup copy of PGP-encrypted unseal keys.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"backup"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/backup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"backup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete the backup copy of PGP-encrypted unseal keys.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"backup"
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/backup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"backup"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "init",
							"item": [
								{
									"name": "Reads the configuration and progress of the current rekey attempt.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/init",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"init"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/init",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"init"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Initializes a new rekey attempt.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"backup\": \"<boolean>\",\n    \"pgp_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"require_verification\": \"<boolean>\",\n    \"secret_shares\": \"<integer>\",\n    \"secret_threshold\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/init",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"init"
											]
										},
										"description": "Only a single rekey attempt can take place at a time, and changing the parameters of a rekey requires canceling and starting a new rekey, which will also provide a new nonce."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"backup\": \"<boolean>\",\n    \"pgp_keys\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"require_verification\": \"<boolean>\",\n    \"secret_shares\": \"<integer>\",\n    \"secret_threshold\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/init",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"init"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Cancels any in-progress rekey.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/init",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"init"
											]
										},
										"description": "This clears the rekey settings as well as any progress made. This must be called to change the parameters of the rekey. Note: verification is still a part of a rekey. If rekeying is canceled during the verification flow, the current unseal keys remain valid."
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/init",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"init"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "recovery-key-backup",
							"item": [
								{
									"name": "Allows fetching or deleting the backup of the rotated unseal keys.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/recovery-key-backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"recovery-key-backup"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/recovery-key-backup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"recovery-key-backup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Allows fetching or deleting the backup of the rotated unseal keys.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/recovery-key-backup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"recovery-key-backup"
											]
										}
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/recovery-key-backup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"recovery-key-backup"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "verify",
							"item": [
								{
									"name": "Read the configuration and progress of the current rekey verification attempt.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"verify"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"verify"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enter a single new key share to progress the rekey verification operation.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"nonce\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"verify"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"key\": \"<string>\",\n    \"nonce\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"verify"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Cancel any in-progress rekey verification operation.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"verify"
											]
										},
										"description": "This clears any progress made and resets the nonce. Unlike a `DELETE` against `sys/rekey/init`, this only resets the current verification operation, not the entire rekey atttempt."
									},
									"response": [
										{
											"name": "empty body",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/rekey/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"rekey",
														"verify"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Enter a single master key share to progress the rekey of the Vault.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"<string>\",\n    \"nonce\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/rekey/update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"rekey",
										"update"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"<string>\",\n    \"nonce\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/rekey/update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"rekey",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "renew",
					"item": [
						{
							"name": "Renews a lease, requesting to extend the lease.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\",\n    \"url_lease_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/renew",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"renew"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\",\n    \"url_lease_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/renew",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"renew"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Renews a lease, requesting to extend the lease.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/renew/:url_lease_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"renew",
										":url_lease_id"
									],
									"variable": [
										{
											"key": "url_lease_id",
											"value": "<string>",
											"description": "(Required) The lease identifier to renew. This is included with a lease."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"increment\": \"<seconds>\",\n    \"lease_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/renew/:url_lease_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"renew",
												":url_lease_id"
											],
											"variable": [
												{
													"key": "url_lease_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "revoke",
					"item": [
						{
							"name": "Revokes a lease immediately.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true,\n    \"url_lease_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"revoke"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true,\n    \"url_lease_id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"revoke"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Revokes a lease immediately.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/revoke/:url_lease_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"revoke",
										":url_lease_id"
									],
									"variable": [
										{
											"key": "url_lease_id",
											"value": "<string>",
											"description": "(Required) The lease identifier to renew. This is included with a lease."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"lease_id\": \"<string>\",\n    \"sync\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/revoke/:url_lease_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"revoke",
												":url_lease_id"
											],
											"variable": [
												{
													"key": "url_lease_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "tools",
					"item": [
						{
							"name": "hash",
							"item": [
								{
									"name": "Generate a hash sum for input data",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"algorithm\": \"sha2-256\",\n    \"format\": \"hex\",\n    \"input\": \"<string>\",\n    \"urlalgorithm\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/tools/hash",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"tools",
												"hash"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"algorithm\": \"sha2-256\",\n    \"format\": \"hex\",\n    \"input\": \"<string>\",\n    \"urlalgorithm\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/tools/hash",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"tools",
														"hash"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Generate a hash sum for input data",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"algorithm\": \"sha2-256\",\n    \"format\": \"hex\",\n    \"input\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/tools/hash/:urlalgorithm",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"tools",
												"hash",
												":urlalgorithm"
											],
											"variable": [
												{
													"key": "urlalgorithm",
													"value": "<string>",
													"description": "(Required) Algorithm to use (POST URL parameter)"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"algorithm\": \"sha2-256\",\n    \"format\": \"hex\",\n    \"input\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/tools/hash/:urlalgorithm",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"tools",
														"hash",
														":urlalgorithm"
													],
													"variable": [
														{
															"key": "urlalgorithm"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "random",
							"item": [
								{
									"name": "Generate random bytes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bytes\": 32,\n    \"format\": \"base64\",\n    \"urlbytes\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/tools/random",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"tools",
												"random"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bytes\": 32,\n    \"format\": \"base64\",\n    \"urlbytes\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/tools/random",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"tools",
														"random"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Generate random bytes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bytes\": 32,\n    \"format\": \"base64\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/tools/random/:urlbytes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"tools",
												"random",
												":urlbytes"
											],
											"variable": [
												{
													"key": "urlbytes",
													"value": "<string>",
													"description": "(Required) The number of bytes to generate (POST URL parameter)"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"bytes\": 32,\n    \"format\": \"base64\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/tools/random/:urlbytes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"tools",
														"random",
														":urlbytes"
													],
													"variable": [
														{
															"key": "urlbytes"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "wrapping",
					"item": [
						{
							"name": "lookup",
							"item": [
								{
									"name": "Look up wrapping properties for the requester's token.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/wrapping/lookup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"wrapping",
												"lookup"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sys/wrapping/lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"wrapping",
														"lookup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Look up wrapping properties for the given token.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/wrapping/lookup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"wrapping",
												"lookup"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/sys/wrapping/lookup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sys",
														"wrapping",
														"lookup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Rotates a response-wrapped token.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/wrapping/rewrap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"wrapping",
										"rewrap"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/wrapping/rewrap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"wrapping",
												"rewrap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Unwraps a response-wrapped token.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/wrapping/unwrap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"wrapping",
										"unwrap"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/sys/wrapping/unwrap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"wrapping",
												"unwrap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Response-wraps an arbitrary JSON object.",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/wrapping/wrap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"wrapping",
										"wrap"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/sys/wrapping/wrap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sys",
												"wrapping",
												"wrap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "The hash of the given string via the given audit backend",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sys/audit-hash/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"audit-hash",
								":path"
							],
							"variable": [
								{
									"key": "path",
									"value": "<string>",
									"description": "(Required) The name of the backend. Cannot be delimited. Example: \"mysql\""
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"input\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/audit-hash/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"audit-hash",
										":path"
									],
									"variable": [
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetches the capabilities of the given token on the given path.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"path\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"paths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sys/capabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"capabilities"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"path\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"paths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/capabilities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"capabilities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetches the capabilities of the token associated with the given token, on the given path.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accessor\": \"<string>\",\n    \"path\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"paths\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sys/capabilities-accessor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"capabilities-accessor"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessor\": \"<string>\",\n    \"path\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"paths\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/capabilities-accessor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"capabilities-accessor"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetches the capabilities of the given token on the given path.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"path\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"paths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sys/capabilities-self",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"capabilities-self"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"path\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"paths\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"token\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/capabilities-self",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"capabilities-self"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the health status of Vault.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"health"
							]
						}
					},
					"response": [
						{
							"name": "initialized, unsealed, and active",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unsealed and standby",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"health"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "data recovery mode replication secondary and active",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"health"
									]
								}
							},
							"code": 472,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "not initialized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"health"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "sealed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"health"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Information about the host instance that this Vault server is running on.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/host-info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"host-info"
							]
						},
						"description": "Information about the host instance that this Vault server is running on.\n\t\tThe information that gets collected includes host hardware information, and CPU,\n\t\tdisk, and memory utilization"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/host-info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"host-info"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Provides information about the backend encryption key.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/key-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"key-status"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/key-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"key-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the high availability status and current leader instance of Vault.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/leader",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"leader"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/leader",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"leader"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Export the metrics aggregated for telemetry purpose.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/metrics?format=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"metrics"
							],
							"query": [
								{
									"key": "format",
									"value": "<string>",
									"description": "Format to export metrics into. Currently accepts only \"prometheus\"."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/metrics?format=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"metrics"
									],
									"query": [
										{
											"key": "format",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Sys Monitor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/monitor?log_level=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"monitor"
							],
							"query": [
								{
									"key": "log_level",
									"value": "<string>",
									"description": "Log level to view system logs at. Currently supported values are \"trace\", \"debug\", \"info\", \"warn\", \"error\"."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/monitor?log_level=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"monitor"
									],
									"query": [
										{
											"key": "log_level",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Move the mount point of an already-mounted backend.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"from\": \"<string>\",\n    \"to\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sys/remount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"remount"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"from\": \"<string>\",\n    \"to\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/remount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"remount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Sys Replication Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/replication/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"replication",
								"status"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/replication/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"replication",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Revokes all secrets or tokens generated under a given prefix immediately",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/revoke-force/:prefix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"revoke-force",
								":prefix"
							],
							"variable": [
								{
									"key": "prefix",
									"value": "<string>",
									"description": "(Required) The path to revoke keys under. Example: \"prod/aws/ops\""
								}
							]
						},
						"description": "Unlike `/sys/leases/revoke-prefix`, this path ignores backend errors encountered during revocation. This is potentially very dangerous and should only be used in specific emergency situations where errors in the backend or the connected backend service prevent normal revocation.\n\nBy ignoring these errors, Vault abdicates responsibility for ensuring that the issued credentials or secrets are properly revoked and/or cleaned up. Access to this endpoint should be tightly controlled."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/revoke-force/:prefix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"revoke-force",
										":prefix"
									],
									"variable": [
										{
											"key": "prefix"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Revokes all secrets (via a lease ID prefix) or tokens (via the tokens' path property) generated under a given prefix immediately.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sync\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sys/revoke-prefix/:prefix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"revoke-prefix",
								":prefix"
							],
							"variable": [
								{
									"key": "prefix",
									"value": "<string>",
									"description": "(Required) The path to revoke keys under. Example: \"prod/aws/ops\""
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sync\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/revoke-prefix/:prefix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"revoke-prefix",
										":prefix"
									],
									"variable": [
										{
											"key": "prefix"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Rotates the backend encryption key used to persist data.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/rotate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"rotate"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/rotate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"rotate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Seal the Vault.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/seal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"seal"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/seal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"seal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check the seal status of a Vault.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/seal-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"seal-status"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/seal-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"seal-status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Cause the node to give up active status.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sys/step-down",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"step-down"
							]
						},
						"description": "This endpoint forces the node to give up active status. If the node does not have active status, this endpoint does nothing. Note that the node will sleep for ten seconds before attempting to grab the active lock again, but if no standby nodes grab the active lock in the interim, the same node may become the active node again."
					},
					"response": [
						{
							"name": "empty body",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/sys/step-down",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"step-down"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unseal the Vault.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"<string>\",\n    \"reset\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sys/unseal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sys",
								"unseal"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"<string>\",\n    \"reset\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sys/unseal",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sys",
										"unseal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "lhafAfe9FDK7T7BkOVbfo11a",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8200/v1"
		}
	]
}